basePath: /
definitions:
  handler.StringData:
    properties:
      data:
        type: string
    type: object
  model.Address:
    properties:
      city:
        type: string
      state:
        type: string
      street:
        type: string
      zipcode:
        type: string
    type: object
  model.Contact:
    properties:
      celphone:
        type: string
      phone:
        type: string
    type: object
  schemas.AuthResponse:
    properties:
      message:
        type: string
    type: object
  schemas.CreateUserRequest:
    properties:
      address:
        $ref: '#/definitions/model.Address'
      contact:
        $ref: '#/definitions/model.Contact'
      cpf:
        type: string
      dateOfBirth:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  schemas.CreateUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  schemas.EncryptedFileResponse:
    properties:
      createdAt:
        type: string
      data:
        items:
          type: integer
        type: array
      deletedAt:
        type: string
      id:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  schemas.ListFilesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.EncryptedFileResponse'
        type: array
      message:
        type: string
    type: object
  schemas.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  schemas.ShowUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
    type: object
  schemas.UpdateUserRequest:
    properties:
      address:
        $ref: '#/definitions/model.Address'
      contact:
        $ref: '#/definitions/model.Contact'
      cpf:
        type: string
      dateOfBirth:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  schemas.UpdateUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  schemas.UserResponse:
    properties:
      address:
        $ref: '#/definitions/model.Address'
      contact:
        $ref: '#/definitions/model.Contact'
      cpf:
        type: string
      createdAt:
        type: string
      dateOfBirth:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Agent Operations
  title: Agent API
  version: 1.0.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuthResponse'
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Login user
      tags:
      - Auth
  /encryption/decrypt_file:
    post:
      consumes:
      - multipart/form-data
      description: Search for a file to decrypt
      parameters:
      - description: Filename
        in: query
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: file_decrypted
          schema:
            type: string
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Decrypt file
      tags:
      - Encryption
  /encryption/generate_keys:
    post:
      consumes:
      - application/json
      description: Generate a pair of keys
      produces:
      - application/json
      responses:
        "200":
          description: keys_generated
          schema:
            type: string
        "500":
          description: internal_server_rror
          schema:
            type: string
      summary: Generate keys
      tags:
      - Encryption
  /encryption/save_file:
    post:
      consumes:
      - multipart/form-data
      description: Save file
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: file_saved
          schema:
            type: string
        "400":
          description: bad_request
          schema:
            type: string
        "404":
          description: not_found
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Save file
      tags:
      - Encryption
  /encryption/size_and_decrypt:
    post:
      consumes:
      - application/json
      description: Get size and decrypt
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.StringData'
      produces:
      - application/json
      responses:
        "200":
          description: file_decrypted
          schema:
            type: string
        "400":
          description: bad_request
          schema:
            type: string
        "404":
          description: not_found
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Get size and decrypt
      tags:
      - Encryption
  /encryption/upload_encrypted_file:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: file_uploaded
          schema:
            type: string
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_rror
          schema:
            type: string
      summary: Upload encrypted file
      tags:
      - Encryption
  /encryption/upload_file:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to encrypt
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: file_uploaded
          schema:
            type: string
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_rror
          schema:
            type: string
      summary: Upload file
      tags:
      - Encryption
  /file/by_username:
    get:
      consumes:
      - application/json
      description: Get a list of encrypted files by username
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ListFilesResponse'
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Get encrypted files by username
      tags:
      - File
  /user:
    delete:
      description: Delete a user
      produces:
      - application/json
      responses:
        "200":
          description: user_deleted
          schema:
            type: string
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_rror
          schema:
            type: string
      summary: Delete user
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CreateUserResponse'
        "400":
          description: bad_request
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Create user
      tags:
      - User
    put:
      description: Updates a user
      parameters:
      - description: User data to Update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UpdateUserResponse'
        "400":
          description: bad_request
          schema:
            type: string
        "404":
          description: user_not_found
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Update user
      tags:
      - User
  /user/username:
    get:
      description: Provide the user data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ShowUserResponse'
        "400":
          description: bad_request
          schema:
            type: string
        "404":
          description: not_found
          schema:
            type: string
        "500":
          description: internal_server_error
          schema:
            type: string
      summary: Find user by username
      tags:
      - User
swagger: "2.0"
